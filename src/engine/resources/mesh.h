#pragma once

#include "defines.h"
#include "math/vertex.h"

#include <glm/vec3.hpp>

#include <vector>

// DEFS
/////////////////////////////////////////////////////////////////////////////////
#define MAX_MESH_INSTANCES 2048
/////////////////////////////////////////////////////////////////////////////////

// Mesh
/////////////////////////////////////////////////////////////////////////////////
struct Mesh {
  std::vector<Vertex3D> vertices; 
  std::vector<u32> indices;

  u32 vao, vbo, ebo;
  u32 ibo; // Instance buffer

  glm::vec3 min, max;
};
/////////////////////////////////////////////////////////////////////////////////

// Public functions
/////////////////////////////////////////////////////////////////////////////////
Mesh* mesh_create();
Mesh* mesh_create(const std::vector<Vertex3D>& vertices, const std::vector<u32>& indices);
void mesh_destroy(Mesh* mesh);
/////////////////////////////////////////////////////////////////////////////////
