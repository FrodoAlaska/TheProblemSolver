#pragma once

#include "defines.h"

#include <glm/mat4x4.hpp>
#include <glm/vec3.hpp>

// CameraType
/////////////////////////////////////////////////////////////////////////////////
enum CameraType {
  CAMERA_FREE, 
  CAMERA_FIXED,
};
/////////////////////////////////////////////////////////////////////////////////

// Camera
/////////////////////////////////////////////////////////////////////////////////
struct Camera {
  f32 yaw, pitch, zoom;
  CameraType type;

  glm::vec3 position, up, direction, front;
  glm::mat4 view, projection, view_projection;

  bool can_move;
};
/////////////////////////////////////////////////////////////////////////////////

// Public functions
/////////////////////////////////////////////////////////////////////////////////
Camera camera_create(const glm::vec3& position, const glm::vec3& target);
void camera_update(Camera* camera);
void camera_move(Camera* camera);
/////////////////////////////////////////////////////////////////////////////////
